{"version":3,"sources":["Component/About/index.js","Component/Skill/index.js","Component/Career/index.js","Component/Project/index.js","Component/Navbar/index.js","Page/Layout/Header.js","Page/Layout/Content.js","Page/index.js","App.js","serviceWorker.js","index.js"],"names":["AboutContainer","styled","div","Information","props","resize","ImageWrap","Readme","Profile","span","process","icon","About","id","src","alt","href","defaultProps","SkillContainer","SkillContent","Skill","console","warn","useEffect","AOS","init","duration","className","data-aos","CareerContainer","CareerWrapper","CarrerContent","DateTime","Career","style","float","ProjectContainer","Project","NavWrapper","Nav","NavRemote","NavBar","onClick","e","target","scroll","scrollTo","document","querySelector","offsetTop","ScrollBottom","scrollToBottom","ScrollTop","scrollToTop","this","Component","HeaderWrapper","HeaderContent","Header","ContentWrapper","Content","Body","Home","updateWindowDimensions","bind","state","imageSize","window","addEventListener","setState","innerWidth","removeEventListener","isMobile","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8338ff56.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst AboutContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: ${props => props.resize === 300 && 'column'};\r\n`;\r\n\r\nconst ImageWrap = styled.div`\r\n  flex: 1 1 auto;\r\n`;\r\nconst Readme = styled.div`\r\n  width: ${props => (props.resize === 300 ? '100' : '70')}%;\r\n  text-align: left;\r\n`;\r\n\r\nconst Profile = styled.span`\r\n  font-size: 13px;\r\n  position: relative;\r\n\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      color: #d3d3d3;\r\n    }\r\n  }\r\n  &::before {\r\n    content: url(${process.env.PUBLIC_URL}/image/${props => props.icon}.svg);\r\n    position: absolute;\r\n    top: 0.1rem;\r\n    left: -1rem;\r\n  }\r\n`;\r\n\r\nconst About = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <AboutContainer id=\"about\">\r\n      <p>\r\n        <span>A</span>bout\r\n      </p>\r\n      <Information resize={resize}>\r\n        <ImageWrap>\r\n          <img src={`${process.env.PUBLIC_URL}/image/profileImage.png`} alt=\" \" />\r\n          <div>\r\n            <b>정진호 (Jeong Jin ho)</b>\r\n          </div>\r\n          <Profile icon=\"email\">bnbn2400@gamil.com</Profile>\r\n          <br />\r\n          <Profile icon=\"gitIcon\">\r\n            <a href=\"https://github.com/jhguma\"> https://github.com/jhguma</a>\r\n          </Profile>\r\n        </ImageWrap>\r\n        <Readme resize={resize}>Readme About Me...</Readme>\r\n      </Information>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nAbout.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default About;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nconst SkillContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  span:first-child {\r\n    color: #4863a0;\r\n  }\r\n`;\r\n\r\nconst SkillContent = styled.div`\r\n  // Mobile 화면단 반응형 고려\r\n  .txt_area {\r\n    max-width: 900px;\r\n    margin: 0 auto 20px;\r\n    padding-bottom: 300px;\r\n\r\n    .skill {\r\n      background: url(${process.env.PUBLIC_URL}/image/skillHistory.png) 50% 0 no-repeat;\r\n      height: 689px;\r\n      position: relative;\r\n\r\n      dl {\r\n        position: absolute;\r\n        top: -6px;\r\n        width: 430px;\r\n        dt {\r\n          position: absolute;\r\n          top: 0;\r\n          font-weight: bold;\r\n          font-size: 2.78rem;\r\n        }\r\n        dd {\r\n          position: relative;\r\n          top: 5rem;\r\n          right: 5rem;\r\n          font-size: 1.21rem;\r\n          line-height: 1.64em;\r\n        }\r\n      }\r\n      .skill_l {\r\n        left: -16px;\r\n        dt {\r\n          right: 0;\r\n        }\r\n        dd {\r\n          position: relative;\r\n          top: 5rem;\r\n          left: 5rem;\r\n          margin-right: 120px;\r\n          text-align: left;\r\n        }\r\n      }\r\n      .skill_r {\r\n        right: -20px;\r\n        dt {\r\n          left: 0;\r\n        }\r\n        dd {\r\n          margin-left: 120px;\r\n        }\r\n      }\r\n\r\n      .skill-web {\r\n        top: 166px;\r\n        width: 363px;\r\n        left: 47px;\r\n      }\r\n      .skill-framework {\r\n        top: 334px;\r\n      }\r\n      .skill-database {\r\n        top: 500px;\r\n        width: 363px;\r\n        left: 47px;\r\n      }\r\n      .skill-version {\r\n        top: 674px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Skill = props => {\r\n  const {resize} = props;\r\n  if (resize === 300) {\r\n    console.warn('추후 Skill 반응형 작업 예정입니다.');\r\n  }\r\n\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SkillContainer id=\"skill\">\r\n      <SkillContent className=\"content3\" id=\"sitemap1-2\">\r\n        <h1>\r\n          <span>S</span>kill\r\n        </h1>\r\n        <div className=\"txt_area\">\r\n          <div className=\"skill\">\r\n            <dl className=\"skill_r history2019\" data-aos=\"fade-left\">\r\n              <dt>Language</dt>\r\n              <dd>&middot; Java</dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_l skill-web\" data-aos=\"fade-right\">\r\n              <dt>WEB</dt>\r\n              <dd>&middot; JavaScript(ES6+) </dd>\r\n              <dd>&middot; React</dd>\r\n              <dd>(Hooks, Redux, Saga)</dd>\r\n              <dd>&middot; Ajax, Axios </dd>\r\n              <dd>&middot; jQuery </dd>\r\n              <dd>&middot; Type Script </dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_r skill-framework\" data-aos=\"fade-left\">\r\n              <dt>FrameWork</dt>\r\n              <dd>&middot; Spring </dd>\r\n              <dd>&middot; MyBatis</dd>\r\n              <dd>&middot; React Bootstrap</dd>\r\n              <dd>&middot; Next.js</dd>\r\n              <dd />\r\n            </dl>\r\n\r\n            <dl className=\"skill_l skill-database\" data-aos=\"fade-right\">\r\n              <dt>DataBase</dt>\r\n              <dd>&middot; Oracle</dd>\r\n              <dd>&middot; MySQL</dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_r skill-version\" data-aos=\"fade-left\">\r\n              <dt>Version Control</dt>\r\n              <dd>&middot; Google Drive</dd>\r\n              <dd>&middot; Git</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </SkillContent>\r\n    </SkillContainer>\r\n  );\r\n};\r\n\r\nSkill.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nSkill.defaultProps = {\r\n  resize: 1004,\r\n};\r\nexport default Skill;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CareerContainer = styled.div`\r\n  padding: 1rem;\r\n  background-color: #f6f6f6;\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CareerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CarrerContent = styled.div`\r\n  max-width: 40rem;\r\n  padding: 15px;\r\n  border: 1px solid #dcdcdc;\r\n  border-radius: 1rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  font-size: ${props => props.resize === 300 && '11px'};\r\n`;\r\n\r\nconst DateTime = styled.span`\r\n  float: 'right';\r\n  color: #74808a;\r\n`;\r\n\r\nconst Career = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <CareerContainer id=\"carrer\">\r\n      <p>\r\n        <span>C</span>areer\r\n      </p>\r\n      <CareerWrapper>\r\n        <CarrerContent resize={resize}>\r\n          <DateTime style={{float: 'right'}}>2019-01 ~ 2019-07</DateTime>\r\n          <h4>비트캠프 강남지점 수료</h4>\r\n          <dl>\r\n            <dt>JAVA FrontEnd BackEnd 개발자 양성과정</dt>\r\n            <dd>- Spring MVC Framework를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 통한 홈페이지 “여행이 좋다” 개발</dd>\r\n            <dd>- React와 Spring Boot를 이용한 홈페이지 “ABILITY” 개발</dd>\r\n          </dl>\r\n          <DateTime style={{float: 'right'}}>2019-10 ~ 2020-02</DateTime>\r\n          <h4>TES SYSTEM 개발팀</h4>\r\n          <dl>\r\n            <dt>시장 유동성 공급을 위한 프로젝트 개발</dt>\r\n            <dd>- python API 연동 React기반 LPMM Project 진행</dd>\r\n            <dd>- Redux, TypeScript를 이용한 LPMM v2 Project 진행</dd>\r\n            <dd>- React를 통한 Arena Page 개발</dd>\r\n          </dl>\r\n        </CarrerContent>\r\n      </CareerWrapper>\r\n    </CareerContainer>\r\n  );\r\n};\r\n\r\nCareer.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nCareer.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Career;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ProjectContainer = styled.div`\r\n  height: 1000px;\r\n  padding: 1rem;\r\n\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Project = () => {\r\n  return (\r\n    <ProjectContainer id=\"project\">\r\n      <p>\r\n        <span>P</span>roject\r\n      </p>\r\n      프로젝트 소개입니다.\r\n    </ProjectContainer>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {animateScroll as scroll} from 'react-scroll';\r\nimport styled from 'styled-components';\r\n\r\nconst NavWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  background-color: black;\r\n  opacity: 0.9;\r\n  z-index: 500;\r\n  bottom: ${props => props.resize === 300 && '0px'};\r\n`;\r\n\r\nconst Nav = styled.div`\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst NavRemote = styled.div`\r\n  position: absolute;\r\n  padding: 1rem;\r\n  background-color: black;\r\n  border-radius: 1rem;\r\n  right: 1rem;\r\n  top: 48rem;\r\n\r\n  & > .topBtn {\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border: 2px solid #e2e2e2;\r\n    border-radius: 1rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  & > .BottomBtn {\r\n    margin-top: 0.5rem;\r\n    border: 2px solid #e2e2e2;\r\n    border-radius: 1rem;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n  }\r\n`;\r\n\r\nclass NavBar extends Component {\r\n  onClick = e => {\r\n    const {id} = e.target;\r\n    scroll.scrollTo(document.querySelector(id).offsetTop - 65);\r\n  };\r\n\r\n  ScrollBottom = () => {\r\n    scroll.scrollToBottom();\r\n  };\r\n\r\n  ScrollTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    const {onClick, ScrollTop, ScrollBottom} = this;\r\n    const {resize} = this.props;\r\n    return (\r\n      <NavWrapper resize={resize}>\r\n        <Nav id=\"#about\" onClick={onClick}>\r\n          About\r\n        </Nav>\r\n        <Nav id=\"#carrer\" onClick={onClick}>\r\n          Carrer\r\n        </Nav>\r\n        <Nav id=\"#skill\" onClick={onClick}>\r\n          Skill\r\n        </Nav>\r\n        <Nav id=\"#project\" onClick={onClick}>\r\n          Project\r\n        </Nav>\r\n\r\n        <NavRemote resize={resize}>\r\n          <div className=\"topBtn\" onClick={ScrollTop}>\r\n            ▲\r\n          </div>\r\n          <div>-----</div>\r\n          <div className=\"BottomBtn\" onClick={ScrollBottom}>\r\n            ▼\r\n          </div>\r\n        </NavRemote>\r\n      </NavWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {NavBar} from 'Component';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center;\r\n  background: url(${process.env.PUBLIC_URL}/image/background.png) top center no-repeat;\r\n  background-size: 100%;\r\n  height: ${props => (props.resize > 897 ? 1004 : 300)}px;\r\n  color: #fff;\r\n  opacity: 0.9;\r\n  z-index: 200;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  z-index: 190;\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 1.8rem;\r\n  div:last-child {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Header = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <HeaderWrapper resize={resize}>\r\n      <NavBar resize={resize} />\r\n      <HeaderContent>\r\n        <div>JHGUMA BLOG</div>\r\n        <div>Front-End Developer</div>\r\n      </HeaderContent>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {About, Career, Skill, Project} from 'Component';\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 75%;\r\n  text-align: center;\r\n  border: 1px solid #e2e2e2;\r\n  background-color: #fff;\r\n  z-index : 100;\r\n`;\r\n\r\nconst Content = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <About resize={resize} />\r\n      <Career resize={resize} />\r\n      <Skill resize={resize} />\r\n      <Project resize={resize} />\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nContent.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Content;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from 'Page/Layout/Header';\r\nimport Content from 'Page/Layout/Content';\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n`;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n    this.state = {\r\n      imageSize: 1004,\r\n    };\r\n  }\r\n\r\n  /* eslint-disable */\r\n  UNSAFE_componentWillMount() {\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    this.setState({\r\n      imageSize: window.innerWidth <= 896 ? 300 : 1004,\r\n    });\r\n  }\r\n  /* eslint-disable */\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    const imageSize = {};\r\n    if (window.innerWidth <= 896) imageSize.isMobile = true;\r\n    else imageSize.isMobile = false;\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n    this.setState({\r\n      imageSize: imageSize.isMobile ? 300 : 1004,\r\n    });\r\n\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n  }\r\n  render() {\r\n    const {imageSize} = this.state;\r\n    return (\r\n      <Body>\r\n        <Header resize={imageSize} />\r\n        <Content resize={imageSize} />\r\n      </Body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from 'Page';\n\nconst App = () => {\n  return <Home />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}