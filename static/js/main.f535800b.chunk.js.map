{"version":3,"sources":["Component/About/index.js","Component/Skill/index.js","Component/Career/index.js","Component/Tag/index.js","Component/Slider/index.js","Component/Information/StackOverFlow.js","Component/Information/LpV1.js","Component/Information/LpV2.js","Component/Information/Arena.js","Component/Project/PostBox.js","Component/Project/index.js","Component/Navbar/index.js","Page/Layout/Header.js","Page/Layout/Content.js","Page/index.js","App.js","serviceWorker.js","index.js"],"names":["AboutContainer","styled","div","Information","props","resize","ImageWrap","Readme","Profile","span","process","icon","About","id","src","alt","href","defaultProps","SkillContainer","SkillContent","Skill","useEffect","AOS","init","duration","className","data-aos","CareerContainer","CareerWrapper","CarrerContent","DateTime","Career","style","float","TagBox","Tag","tag","tags","replace","split","map","tagName","index","key","Slideshow","setSlideMake","slideImages","item","height","state","transitionDuration","infinite","indicators","arrows","this","React","Component","BackGround","ModalContainer","ModalFooter","Title","StackOverFlow","onClick","window","onkeydown","event","keyCode","LpV1","LpV2","Arena","PostBoxWrapper","PostImage","PostInputWrapper","PostInput","type","title","PostBox","imageName","children","width","ProjectContainer","Project","toggleOn","name","toggleClose","ability","lpV1","lpV2","arena","setState","Modal","stackOverFlow","propTypes","PropTypes","number","NavWrapper","Nav","NavRemote","NavBar","e","target","scroll","scrollTo","document","querySelector","offsetTop","ScrollBottom","scrollToBottom","ScrollTop","scrollToTop","HeaderWrapper","HeaderContent","Header","ContentWrapper","Content","Body","Home","updateWindowDimensions","bind","imageSize","addEventListener","innerWidth","removeEventListener","isMobile","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f535800b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst AboutContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: ${props => props.resize === 300 && 'column'};\r\n`;\r\n\r\nconst ImageWrap = styled.div`\r\n  flex: 1 1 auto;\r\n`;\r\nconst Readme = styled.div`\r\n  width: ${props => (props.resize === 300 ? '100' : '70')}%;\r\n  text-align: left;\r\n`;\r\n\r\nconst Profile = styled.span`\r\n  font-size: 13px;\r\n  position: relative;\r\n\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      color: #d3d3d3;\r\n    }\r\n  }\r\n  &::before {\r\n    content: url(${process.env.PUBLIC_URL}/image/${props => props.icon}.svg);\r\n    position: absolute;\r\n    top: 0.1rem;\r\n    left: -1rem;\r\n  }\r\n`;\r\n\r\nconst About = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <AboutContainer id=\"about\">\r\n      <p>\r\n        <span>A</span>bout\r\n      </p>\r\n      <Information resize={resize}>\r\n        <ImageWrap>\r\n          <img src={`${process.env.PUBLIC_URL}/image/profileImage.png`} alt=\" \" />\r\n          <div>\r\n            <b>정진호 (Jeong Jin ho)</b>\r\n          </div>\r\n          <Profile icon=\"email\">bnbn2400@gamil.com</Profile>\r\n          <br />\r\n          <Profile icon=\"gitIcon\">\r\n            <a href=\"https://github.com/jhguma\"> https://github.com/jhguma</a>\r\n          </Profile>\r\n        </ImageWrap>\r\n        <Readme resize={resize}>Readme About Me...</Readme>\r\n      </Information>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nAbout.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default About;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nconst SkillContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  span:first-child {\r\n    color: #4863a0;\r\n  }\r\n`;\r\n\r\nconst SkillContent = styled.div`\r\n  .txt_area {\r\n    max-width: 900px;\r\n    margin: 0 auto 20px;\r\n    padding-bottom: 300px;\r\n\r\n    .skill {\r\n      background: url(${process.env.PUBLIC_URL}/image/skillHistory.png) 50% 0 no-repeat;\r\n      height: 689px;\r\n      position: relative;\r\n\r\n      dl {\r\n        width: 50%;\r\n        position: absolute;\r\n        top: -6px;\r\n        text-align: left;\r\n        dt {\r\n          position: relative;\r\n          top: 0;\r\n          font-weight: bold;\r\n          font-size: ${props => (props.resize === 300 ? '1rem' : '2.78rem')};\r\n          padding-left: 1rem;\r\n        }\r\n        dd {\r\n          top: 5rem;\r\n          right: 5rem;\r\n          font-size: ${props => (props.resize === 300 ? '1rem' : '1.21rem')};\r\n          line-height: 1.64em;\r\n          margin: 0px;\r\n          text-align: center;\r\n        }\r\n      }\r\n      .skill_l {\r\n        text-align: right;\r\n\r\n        dt {\r\n          right: 0;\r\n          padding-right: 1rem;\r\n        }\r\n        dd {\r\n          top: 5rem;\r\n          text-align: center;\r\n        }\r\n      }\r\n      .skill_r {\r\n        right: 0px;\r\n        dt {\r\n          left: 0;\r\n        }\r\n      }\r\n\r\n      .skill-web {\r\n        top: 166px;\r\n        width: 50%;\r\n      }\r\n      .skill-framework {\r\n        top: 334px;\r\n      }\r\n      .skill-database {\r\n        top: 500px;\r\n        width: 50%;\r\n      }\r\n      .skill-version {\r\n        top: 674px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Skill = props => {\r\n  const {resize} = props;\r\n\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SkillContainer id=\"skill\">\r\n      <SkillContent className=\"content3\" id=\"sitemap1-2\" resize={resize}>\r\n        <h1>\r\n          <span>S</span>kill\r\n        </h1>\r\n        <div className=\"txt_area\">\r\n          <div className=\"skill\">\r\n            <dl className=\"skill_r history2019\" data-aos=\"fade-left\">\r\n              <dt>Language</dt>\r\n              <dd>&middot; Java</dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_l skill-web\" data-aos=\"fade-right\">\r\n              <dt>WEB</dt>\r\n              <dd>&middot; JavaScript(ES6+) </dd>\r\n              <dd>&middot; React</dd>\r\n              <dd>(Hooks, Redux, Saga)</dd>\r\n              <dd>&middot; Ajax, Axios </dd>\r\n              <dd>&middot; jQuery </dd>\r\n              <dd>&middot; Type Script </dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_r skill-framework\" data-aos=\"fade-left\">\r\n              <dt>FrameWork</dt>\r\n              <dd>&middot; Spring </dd>\r\n              <dd>&middot; MyBatis</dd>\r\n              <dd>&middot; React Bootstrap</dd>\r\n              <dd>&middot; Next.js</dd>\r\n              <dd />\r\n            </dl>\r\n\r\n            <dl className=\"skill_l skill-database\" data-aos=\"fade-right\">\r\n              <dt>DataBase</dt>\r\n              <dd>&middot; Oracle</dd>\r\n              <dd>&middot; MySQL</dd>\r\n            </dl>\r\n\r\n            <dl className=\"skill_r skill-version\" data-aos=\"fade-left\">\r\n              <dt>Version Control</dt>\r\n              <dd>&middot; Google Drive</dd>\r\n              <dd>&middot; Git</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </SkillContent>\r\n    </SkillContainer>\r\n  );\r\n};\r\n\r\nSkill.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nSkill.defaultProps = {\r\n  resize: 1004,\r\n};\r\nexport default Skill;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CareerContainer = styled.div`\r\n  padding: 1rem;\r\n  background-color: #f6f6f6;\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CareerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CarrerContent = styled.div`\r\n  max-width: 40rem;\r\n  padding: 15px;\r\n  border: 1px solid #dcdcdc;\r\n  border-radius: 1rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  font-size: ${props => props.resize === 300 && '11px'};\r\n`;\r\n\r\nconst DateTime = styled.span`\r\n  float: 'right';\r\n  color: #74808a;\r\n`;\r\n\r\nconst Career = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <CareerContainer id=\"carrer\">\r\n      <p>\r\n        <span>C</span>areer\r\n      </p>\r\n      <CareerWrapper>\r\n        <CarrerContent resize={resize}>\r\n          <DateTime style={{float: 'right'}}>2019-01 ~ 2019-07</DateTime>\r\n          <h4>비트캠프 강남지점 수료</h4>\r\n          <dl>\r\n            <dt>JAVA FrontEnd BackEnd 개발자 양성과정</dt>\r\n            <dd>- Spring MVC Framework를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 통한 홈페이지 “여행이 좋다” 개발</dd>\r\n            <dd>- React와 Spring Boot를 이용한 홈페이지 “ABILITY” 개발</dd>\r\n          </dl>\r\n          <DateTime style={{float: 'right'}}>2019-10 ~ 2020-02</DateTime>\r\n          <h4>TES SYSTEM 개발팀</h4>\r\n          <dl>\r\n            <dt>시장 유동성 공급을 위한 프로젝트 개발</dt>\r\n            <dd>- python API 연동 React기반 LPMM Project 진행</dd>\r\n            <dd>- Redux, TypeScript를 이용한 LPMM v2 Project 진행</dd>\r\n            <dd>- React를 통한 Arena Page 개발</dd>\r\n          </dl>\r\n        </CarrerContent>\r\n      </CareerWrapper>\r\n    </CareerContainer>\r\n  );\r\n};\r\n\r\nCareer.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nCareer.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Career;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TagBox = styled.span`\r\n  padding: 0.5rem;\r\n  padding-top: 0.1rem;\r\n  padding-bottom: 0.3rem;\r\n  margin-right: 0.4rem;\r\n  font-size: 12px;\r\n  background: black;\r\n  color: #fff;\r\n  border-radius: 0.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Tag = props => {\r\n  const {tags} = props;\r\n\r\n  const makeTagBox = tag => {\r\n    if (!tag) return null;\r\n    const tagList = tag.replace(/\\s/gi, '').split(',');\r\n    return tagList.map((tagName, index) => {\r\n      return <TagBox key={`${tagName + index}`}>{tagName}</TagBox>;\r\n    });\r\n  };\r\n\r\n  return makeTagBox(tags);\r\n};\r\n\r\nTag.propTypes = {\r\n  tags: PropTypes.string,\r\n};\r\n\r\nTag.defaultProps = {\r\n  tags: '',\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Slide } from 'react-slideshow-image';\r\n \r\nclass Slideshow extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n      duration: 5000,\r\n      transitionDuration: 500,\r\n      infinite: true,\r\n      indicators: true,\r\n      arrows: true,\r\n    }\r\n  }\r\n\r\n  setSlideMake = () =>{\r\n    const {slideImages} =this.props;\r\n    \r\n    return slideImages.map(item =>{\r\n      // TODO hegiht값 조정 필요\r\n      return (\r\n        <div key={`keys${item}`} className=\"each-slide\">\r\n          <div style={{'backgroundImage': `url(${process.env.PUBLIC_URL}/image/${item}.png)`,height:\"500px\"}} />\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {setSlideMake} = this\r\n    const {duration ,transitionDuration , infinite , indicators , arrows} = this.state\r\n    return (\r\n      <div className=\"slide-container\" >\r\n        <Slide duration={duration} transitionDuration={transitionDuration} infinite={infinite} indicators={indicators} arrows={arrows}>\r\n          {setSlideMake()}\r\n        </Slide>\r\n      </div>\r\n    )\r\n    }  \r\n\r\n}\r\n\r\nSlideshow.propTypes = {\r\n  resize: PropTypes.number,\r\n  slideImages: PropTypes.array,\r\n};\r\n\r\nSlideshow.defaultProps = {\r\n  resize: 1004,\r\n  slideImages: [],\r\n};\r\n\r\n\r\nexport default Slideshow;","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'Component/Information/modal.css';\r\nimport Tag from 'Component/Tag';\r\nimport Slideshow from 'Component/Slider';\r\n\r\nconst BackGround = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.resize === 300 ? 0 : 3.3)}rem;\r\n  bottom: ${props => (props.resize === 300 ? 3.3 : 0)}rem;\r\n  left: 0px;\r\n  right: 0px;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  border-radius: 5px;\r\n  max-width: ${props => (props.resize === 300 ? 80 : 50)}%;\r\n  height: 90%;\r\n  margin: auto;\r\n  padding: 0.625rem;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  max-width: ${props => (props.resize === 300 ? 79.5 : 49.5)}%;\r\n  background: #d3d3d3;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  margin-top: 0.4rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-right: auto;\r\n  position: relative;\r\n  &::before {\r\n    width: 90px;\r\n    position: absolute;\r\n    content: '프로젝트 명';\r\n    top: -26px;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    color: #3680b0;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nclass StackOverFlow extends Component {\r\n  render() {\r\n    const {resize, tag, onClick} = this.props;\r\n    window.onkeydown = event => {\r\n      if (event.keyCode === 27) {\r\n        onClick();\r\n      }\r\n    };\r\n    return (\r\n      <BackGround className=\"backdropStyle\" id=\"stackoverflow\" resize={resize}>\r\n        <ModalContainer resize={resize}>\r\n          <Slideshow slideImages={['stackOverFlow','lpV1Main']} />\r\n          <div className=\"ModalHeaderWrap\">\r\n            <Title>Ability</Title>\r\n            <Tag tags={tag} />\r\n          </div>\r\n          <div className=\"ModalBody\">content</div>\r\n        </ModalContainer>\r\n        <ModalFooter resize={resize} onClick={onClick}>\r\n          Close\r\n        </ModalFooter>\r\n      </BackGround>\r\n    );\r\n  }\r\n}\r\n\r\nStackOverFlow.propTypes = {\r\n  resize: PropTypes.number,\r\n  tag: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nStackOverFlow.defaultProps = {\r\n  resize: 1004,\r\n  tag: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default StackOverFlow;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'Component/Information/modal.css';\r\nimport Tag from 'Component/Tag';\r\nimport Slideshow from 'Component/Slider';\r\n\r\nconst BackGround = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.resize === 300 ? 0 : 3.3)}rem;\r\n  bottom: ${props => (props.resize === 300 ? 3.3 : 0)}rem;\r\n  left: 0px;\r\n  right: 0px;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  border-radius: 5px;\r\n  max-width: ${props => (props.resize === 300 ? 80 : 50)}%;\r\n  height: 90%;\r\n  margin: auto;\r\n  padding: 0.625rem;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  max-width: ${props => (props.resize === 300 ? 79.5 : 49.5)}%;\r\n  background: #d3d3d3;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  margin-top: 0.4rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-right: auto;\r\n  position: relative;\r\n  &::before {\r\n    width: 90px;\r\n    position: absolute;\r\n    content: '프로젝트 명';\r\n    top: -26px;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    color: #3680b0;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nclass LpV1 extends Component {\r\n  render() {\r\n    const {resize, tag, onClick} = this.props;\r\n    window.onkeydown = event => {\r\n      if (event.keyCode === 27) {\r\n        onClick();\r\n      }\r\n    };\r\n    return (\r\n      <BackGround className=\"backdropStyle\" id=\"stackoverflow\" resize={resize}>\r\n        <ModalContainer resize={resize}>\r\n          <Slideshow slideImages={['lpV1Main']} />\r\n          <div className=\"ModalHeaderWrap\">\r\n            <Title>Ability</Title>\r\n            <Tag tags={tag} />\r\n          </div>\r\n          <div className=\"ModalBody\">content</div>\r\n        </ModalContainer>\r\n        <ModalFooter resize={resize} onClick={onClick}>\r\n          Close\r\n        </ModalFooter>\r\n      </BackGround>\r\n    );\r\n  }\r\n}\r\n\r\nLpV1.propTypes = {\r\n  resize: PropTypes.number,\r\n  tag: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nLpV1.defaultProps = {\r\n  resize: 1004,\r\n  tag: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default LpV1;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'Component/Information/modal.css';\r\nimport Tag from 'Component/Tag';\r\nimport Slideshow from 'Component/Slider';\r\n\r\nconst BackGround = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.resize === 300 ? 0 : 3.3)}rem;\r\n  bottom: ${props => (props.resize === 300 ? 3.3 : 0)}rem;\r\n  left: 0px;\r\n  right: 0px;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  border-radius: 5px;\r\n  max-width: ${props => (props.resize === 300 ? 80 : 50)}%;\r\n  height: 90%;\r\n  margin: auto;\r\n  padding: 0.625rem;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  max-width: ${props => (props.resize === 300 ? 79.5 : 49.5)}%;\r\n  background: #d3d3d3;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  margin-top: 0.4rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-right: auto;\r\n  position: relative;\r\n  &::before {\r\n    width: 90px;\r\n    position: absolute;\r\n    content: '프로젝트 명';\r\n    top: -26px;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    color: #3680b0;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nclass LpV2 extends Component {\r\n  render() {\r\n    const {resize, tag, onClick} = this.props;\r\n    window.onkeydown = event => {\r\n      if (event.keyCode === 27) {\r\n        onClick();\r\n      }\r\n    };\r\n    return (\r\n      <BackGround className=\"backdropStyle\" id=\"stackoverflow\" resize={resize}>\r\n        <ModalContainer resize={resize}>\r\n          <Slideshow slideImages={['lpV1Main']} />\r\n          <div className=\"ModalHeaderWrap\">\r\n            <Title>Ability</Title>\r\n            <Tag tags={tag} />\r\n          </div>\r\n          <div className=\"ModalBody\">content</div>\r\n        </ModalContainer>\r\n        <ModalFooter resize={resize} onClick={onClick}>\r\n          Close\r\n        </ModalFooter>\r\n      </BackGround>\r\n    );\r\n  }\r\n}\r\n\r\nLpV2.propTypes = {\r\n  resize: PropTypes.number,\r\n  tag: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nLpV2.defaultProps = {\r\n  resize: 1004,\r\n  tag: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default LpV2;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'Component/Information/modal.css';\r\nimport Tag from 'Component/Tag';\r\nimport Slideshow from 'Component/Slider';\r\n\r\nconst BackGround = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.resize === 300 ? 0 : 3.3)}rem;\r\n  bottom: ${props => (props.resize === 300 ? 3.3 : 0)}rem;\r\n  left: 0px;\r\n  right: 0px;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  border-radius: 5px;\r\n  max-width: ${props => (props.resize === 300 ? 80 : 50)}%;\r\n  height: 90%;\r\n  margin: auto;\r\n  padding: 0.625rem;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  max-width: ${props => (props.resize === 300 ? 79.5 : 49.5)}%;\r\n  background: #d3d3d3;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  margin-top: 0.4rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-right: auto;\r\n  position: relative;\r\n  &::before {\r\n    width: 90px;\r\n    position: absolute;\r\n    content: '프로젝트 명';\r\n    top: -26px;\r\n    font-weight: normal;\r\n    font-size: 13px;\r\n    color: #3680b0;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nclass Arena extends Component {\r\n  render() {\r\n    const {resize, tag, onClick} = this.props;\r\n    window.onkeydown = event => {\r\n      if (event.keyCode === 27) {\r\n        onClick();\r\n      }\r\n    };\r\n    return (\r\n      <BackGround className=\"backdropStyle\" id=\"stackoverflow\" resize={resize}>\r\n        <ModalContainer resize={resize}>\r\n          <Slideshow slideImages={['lpV1Main']} />\r\n          <div className=\"ModalHeaderWrap\">\r\n            <Title>Ability</Title>\r\n            <Tag tags={tag} />\r\n          </div>\r\n          <div className=\"ModalBody\">content</div>\r\n        </ModalContainer>\r\n        <ModalFooter resize={resize} onClick={onClick}>\r\n          Close\r\n        </ModalFooter>\r\n      </BackGround>\r\n    );\r\n  }\r\n}\r\n\r\nArena.propTypes = {\r\n  resize: PropTypes.number,\r\n  tag: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nArena.defaultProps = {\r\n  resize: 1004,\r\n  tag: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default Arena;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport Tag from 'Component/Tag';\r\n\r\nconst PostBoxWrapper = styled.div`\r\n  display: ${props => (props.resize === 300 ? 'block' : 'flex')};\r\n  margin-top: 1rem;\r\n  margin-bottom: 2rem;\r\n  border: 1px solid #e2e2e2;\r\n  border-radius: 1rem;\r\n  width: 100%;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f6f6f6;\r\n  }\r\n`;\r\n\r\nconst PostImage = styled.div`\r\n  margin: 1rem;\r\n  max-width: 897px;\r\n`;\r\n\r\nconst PostInputWrapper = styled.div`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PostInput = styled.div`\r\n  margin: 0.3rem;\r\n  margin-top: 1.5rem;\r\n  height: ${props => !props.type && '20px'};\r\n  padding: 0.5rem;\r\n  text-align: left;\r\n  border: 1px solid #e2e2e2;\r\n  border-radius: 1rem;\r\n  word-break:break-all;\r\n  line-height: 1.5rem;\r\n  position : relative;\r\n  max-width: 456.66px;\r\n\r\n  &::before{\r\n    position: absolute;\r\n    top : -1.3rem;\r\n    font-size : 12px;\r\n    color: #74808a;\r\n    content : '${props => props.title}'\r\n  }\r\n\r\n`;\r\n\r\nclass PostBox extends Component {\r\n  componentDidMount() {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {resize, title, tag, imageName, children, onClick} = this.props;\r\n\r\n    return (\r\n      <PostBoxWrapper resize={resize} data-aos=\"fade-up\" onClick={()=> onClick(title)}>\r\n        <PostImage resize={resize}>\r\n          {/* TODO - 자동 슬라이드쇼 적용필요 3초마다 넘어가게- */}\r\n          <img src={`${process.env.PUBLIC_URL}/image/${imageName}.png`} width=\"100%\" height=\"100%\" alt=\"Ability\" />\r\n        </PostImage>\r\n\r\n        <PostInputWrapper>\r\n          <PostInput title=\"Project Name\">\r\n            <b>{title || 'title'}</b>\r\n          </PostInput>\r\n          <PostInput title=\"Tag\" type=\"tag\">\r\n            <Tag tags={tag} />\r\n          </PostInput>\r\n          <PostInput title=\"Explanation\" type=\"content\">\r\n            {children || 'content'}\r\n          </PostInput>\r\n        </PostInputWrapper>\r\n        {/* TODO - Click시 Modal 상세페이지 나타나야함 */}\r\n      </PostBoxWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nPostBox.propTypes = {\r\n  resize: PropTypes.number,\r\n  title: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  imageName: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.oneOfType(PropTypes.string, PropTypes.object, PropTypes.array),\r\n};\r\n\r\nPostBox.defaultProps = {\r\n  resize: 1004,\r\n  title: '',\r\n  tag: '',\r\n  imageName: '',\r\n  onClick: () => {},\r\n  children: null,\r\n};\r\n\r\nexport default PostBox;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport {StackOverFlow,LpV1,LpV2,Arena} from 'Component/Information';\r\nimport PostBox from './PostBox';\r\n\r\nconst ProjectContainer = styled.div`\r\n  padding: 1rem;\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nclass Project extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ability: 'Ability',\r\n      lpV1: 'Lpmm 1.0 version',\r\n      lpV2: 'Lpmm 2.0 version',\r\n      arena: 'Arena Challenge',\r\n      tag: {\r\n        stackOverFlow: 'Spring Boot, React, React hooks, Redux, Redux Saga',\r\n        lpV1: 'python, React, React hooks',\r\n        lpV2: 'python, Type Script, React, React hooks',\r\n        arena: 'python, React',\r\n      },\r\n      Modal: null,\r\n    };\r\n  }\r\n\r\n  toggleOn = name => {\r\n    const {resize} = this.props;\r\n    const {toggleClose} = this;\r\n    const {ability, lpV1, lpV2, arena, tag} = this.state;\r\n    if (name === ability) {\r\n      this.setState({\r\n        Modal: <StackOverFlow resize={resize} tag={tag.stackOverFlow} onClick={toggleClose} />,\r\n      });\r\n    }else if(name === lpV1) {\r\n      this.setState({\r\n        Modal: <LpV1 resize={resize} tag={tag.lpV1} onClick={toggleClose} />,\r\n      });\r\n    }else if(name ===lpV2) {\r\n      this.setState({\r\n        Modal : <LpV2 resize={resize} tag={tag.lpV2} onClick={toggleClose} />\r\n      })\r\n    }else if(name === arena) {\r\n      this.setState({\r\n        Modal : <Arena resize={resize} tag={tag.arena} onClick={toggleClose} />\r\n      })\r\n    }\r\n  };\r\n\r\n  toggleClose = () => {\r\n    this.setState({Modal: null});\r\n  };\r\n\r\n  render() {\r\n    const {resize} = this.props;\r\n    const {toggleOn} = this;\r\n    const {ability, lpV1, lpV2, arena, tag, Modal} = this.state;\r\n    return (\r\n      <ProjectContainer id=\"project\">\r\n        <p>\r\n          <span>P</span>roject\r\n        </p>\r\n        <PostBox resize={resize} imageName=\"stackOverFlow\" title={ability} tag={tag.stackOverFlow} onClick={toggleOn}>\r\n          한국형 Stack Over Flow 개발\r\n        </PostBox>\r\n        <PostBox resize={resize} imageName=\"lpV1Main\" title={lpV1} tag={tag.lpV1} onClick={toggleOn}>\r\n          코인시장의 유동성 공급을 위한 LP 페이지 제작\r\n        </PostBox>\r\n        <PostBox resize={resize} imageName=\"LpV2Main\" title={lpV2} tag={tag.lpV2} onClick={toggleOn}>\r\n          코인시장의 유동성 공급이 필요한 여러 코인을 관리하는 LP 페이지 제작\r\n        </PostBox>\r\n        <PostBox resize={resize} imageName=\"Arena-main\" title={arena} tag={tag.arena} onClick={toggleOn}>\r\n          유저간의 모의거래를 통해 랭킹에 따른 코인 지급 Game 페이지 제작\r\n        </PostBox>\r\n        {Modal}\r\n      </ProjectContainer>\r\n    );\r\n  }\r\n}\r\n\r\nPostBox.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nPostBox.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Project;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {animateScroll as scroll} from 'react-scroll';\r\nimport styled from 'styled-components';\r\n\r\nconst NavWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  background-color: black;\r\n  opacity: 0.9;\r\n  z-index: 500;\r\n  bottom: ${props => props.resize === 300 && '0px'};\r\n`;\r\n\r\nconst Nav = styled.div`\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #e2e2e2;\r\n  }\r\n`;\r\n\r\nconst NavRemote = styled.div`\r\n  display: ${props => props.resize === 300 && 'none'};\r\n  position: absolute;\r\n  padding: 1rem;\r\n  background-color: black;\r\n  border-radius: 1rem;\r\n  right: 1rem;\r\n  top: 48rem;\r\n\r\n  & > .topBtn {\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border: 2px solid #e2e2e2;\r\n    border-radius: 1rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  & > .BottomBtn {\r\n    margin-top: 0.5rem;\r\n    border: 2px solid #e2e2e2;\r\n    border-radius: 1rem;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n  }\r\n`;\r\n\r\nclass NavBar extends Component {\r\n  onClick = e => {\r\n    const {id} = e.target;\r\n    scroll.scrollTo(document.querySelector(id).offsetTop - 65);\r\n  };\r\n\r\n  ScrollBottom = () => {\r\n    scroll.scrollToBottom();\r\n  };\r\n\r\n  ScrollTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    const {onClick, ScrollTop, ScrollBottom} = this;\r\n    const {resize} = this.props;\r\n    return (\r\n      <NavWrapper resize={resize}>\r\n        <Nav id=\"#about\" onClick={onClick}>\r\n          About\r\n        </Nav>\r\n        <Nav id=\"#carrer\" onClick={onClick}>\r\n          Carrer\r\n        </Nav>\r\n        <Nav id=\"#skill\" onClick={onClick}>\r\n          Skill\r\n        </Nav>\r\n        <Nav id=\"#project\" onClick={onClick}>\r\n          Project\r\n        </Nav>\r\n\r\n        <NavRemote resize={resize}>\r\n          <div className=\"topBtn\" onClick={ScrollTop}>\r\n            ▲\r\n          </div>\r\n          <div>-----</div>\r\n          <div className=\"BottomBtn\" onClick={ScrollBottom}>\r\n            ▼\r\n          </div>\r\n        </NavRemote>\r\n      </NavWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {NavBar} from 'Component';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center;\r\n  background: url(${process.env.PUBLIC_URL}/image/background.png) top center no-repeat;\r\n  background-size: 100%;\r\n  height: ${props => (props.resize > 897 ? 1004 : 300)}px;\r\n  color: #fff;\r\n  opacity: 0.9;\r\n  z-index: 200;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  z-index: 190;\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 1.8rem;\r\n  div:last-child {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Header = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <HeaderWrapper resize={resize}>\r\n      <NavBar resize={resize} />\r\n      <HeaderContent>\r\n        <div>JHGUMA BLOG</div>\r\n        <div>Front-End Developer</div>\r\n      </HeaderContent>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {About, Career, Skill, Project} from 'Component';\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: ${props => (props.resize === 300 ? 100 : 75)}%;\r\n  text-align: center;\r\n  border: 1px solid #e2e2e2;\r\n  background-color: #fff;\r\n  z-index: 100;\r\n`;\r\n\r\nconst Content = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <ContentWrapper resize={resize}>\r\n      <About resize={resize} />\r\n      <Career resize={resize} />\r\n      <Skill resize={resize} />\r\n      <Project resize={resize} />\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nContent.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Content;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from 'Page/Layout/Header';\r\nimport Content from 'Page/Layout/Content';\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n`;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n    this.state = {\r\n      imageSize: 1004,\r\n    };\r\n  }\r\n\r\n  /* eslint-disable */\r\n  UNSAFE_componentWillMount() {\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    this.setState({\r\n      imageSize: window.innerWidth <= 896 ? 300 : 1004,\r\n    });\r\n  }\r\n  /* eslint-disable */\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    const imageSize = {};\r\n    if (window.innerWidth <= 896) imageSize.isMobile = true;\r\n    else imageSize.isMobile = false;\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n    this.setState({\r\n      imageSize: imageSize.isMobile ? 300 : 1004,\r\n    });\r\n\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n  }\r\n  render() {\r\n    const {imageSize} = this.state;\r\n    return (\r\n      <Body>\r\n        <Header resize={imageSize} />\r\n        <Content resize={imageSize} />\r\n      </Body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from 'Page';\r\n\r\nconst App = () => {\r\n  return <Home />;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}