{"version":3,"sources":["Page/Layout/Header.js","Component/About/index.js","Component/Skill/index.js","Component/Career/index.js","Page/Layout/Content.js","Page/index.js","App.js","serviceWorker.js","index.js"],"names":["HeaderWrapper","styled","div","process","props","resize","HeaderContent","Header","defaultProps","AboutContainer","Information","ImageWrap","Readme","Profile","About","src","alt","SkillContainer","Skill","CareerContainer","CareerWrapper","CarrerContent","DateTime","span","Career","style","float","ContentWrapper","Content","Body","Home","updateWindowDimensions","bind","state","imageSize","window","addEventListener","this","setState","innerWidth","removeEventListener","isMobile","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0wBAIA,IAAMA,EAAgBC,IAAOC,IAAV,IAICC,UAER,SAAAC,GAAK,OAAKA,EAAMC,OAAS,IAAM,KAAO,OAK5CC,EAAgBL,IAAOC,IAAV,KAYbK,EAAS,SAAAH,GAAU,IAChBC,EAAUD,EAAVC,OACP,OACE,kBAACL,EAAD,CAAeK,OAAQA,GACrB,kBAACC,EAAD,KACE,4CACA,uDAURC,EAAOC,aAAe,CACpBH,OAAQ,MAGKE,Q,ioBC3Cf,IAAME,EAAiBR,IAAOC,IAAV,KAcdQ,EAAcT,IAAOC,IAAV,KAEG,SAAAE,GAAK,OAAoB,MAAjBA,EAAMC,QAAkB,YAG9CM,EAAYV,IAAOC,IAAV,KAGTU,EAASX,IAAOC,IAAV,KACA,SAAAE,GAAK,OAAoB,MAAjBA,EAAMC,OAAiB,MAAQ,QAI7CQ,EAAUZ,IAAOC,IAAV,KAIPY,EAAQ,SAAAV,GAAU,IACfC,EAAUD,EAAVC,OAEP,OACE,kBAACI,EAAD,KACE,2BACE,mCADF,QAGA,kBAACC,EAAD,CAAaL,OAAQA,GACnB,kBAACM,EAAD,KACE,yBAAKI,IAAG,UAAKZ,SAAL,2BAAsDa,IAAI,MAClE,6BACE,iEAEF,kBAACH,EAAD,2BACA,kBAACA,EAAD,mCAEF,kBAACD,EAAD,CAAQP,OAAQA,GAAhB,yBAYRS,EAAMN,aAAe,CACnBH,OAAQ,MAGKS,Q,uLCjEf,IAAMG,EAAiBhB,IAAOC,IAAV,KAkBLgB,EARD,WACZ,OACE,kBAACD,EAAD,KACE,sC,uwBCZN,IAAME,EAAkBlB,IAAOC,IAAV,KAcfkB,EAAgBnB,IAAOC,IAAV,KAObmB,EAAgBpB,IAAOC,IAAV,KAOJ,SAAAE,GAAK,OAAqB,MAAjBA,EAAMC,QAAkB,UAG1CiB,EAAWrB,IAAOsB,KAAV,KAKRC,EAAS,SAAApB,GAAU,IAChBC,EAAUD,EAAVC,OACP,OACE,kBAACc,EAAD,KACE,qCACA,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAehB,OAAQA,GACrB,kBAACiB,EAAD,CAAUG,MAAO,CAACC,MAAO,UAAzB,qBACA,8FACA,4BACE,iGACA,sIACA,6HACA,kJACA,6IAEF,kBAACJ,EAAD,CAAUG,MAAO,CAACC,MAAO,UAAzB,qBACA,6DACA,4BACE,qIACA,qGACA,yGACA,uFAYZF,EAAOhB,aAAe,CACpBH,OAAQ,MAGKmB,Q,sKCzEf,IAAMG,EAAiB1B,IAAOC,IAAV,KAOd0B,EAAU,SAAAxB,GAAU,IACjBC,EAAUD,EAAVC,OAEP,OACE,kBAACsB,EAAD,KACE,kBAAC,EAAD,CAAOtB,OAAQA,IACf,kBAAC,EAAD,CAAQA,OAAQA,IAChB,kBAAC,EAAD,MACA,8DASNuB,EAAQpB,aAAe,CACrBH,OAAQ,MAGKuB,Q,wKC5Bf,IAAMC,EAAO5B,IAAOC,IAAV,KAwDK4B,E,YAhDb,WAAY1B,GAAQ,IAAD,8BACjB,4CAAMA,KAED2B,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAE9B,EAAKC,MAAQ,CACXC,UAAW,MANI,E,yFAYjBC,OAAOC,iBAAiB,SAAUC,KAAKN,wBAEvCM,KAAKC,SAAS,CACZJ,UAAWC,OAAOI,YAAc,IAAM,IAAM,S,6CAM9CJ,OAAOK,oBAAoB,SAAUH,KAAKN,0B,+CAI1C,IAAMG,EAAY,GACdC,OAAOI,YAAc,IAAKL,EAAUO,UAAW,EAC9CP,EAAUO,UAAW,EAG1BJ,KAAKC,SAAS,CACZJ,UAAWA,EAAUO,SAAW,IAAM,S,+BAMhC,IACDP,EAAaG,KAAKJ,MAAlBC,UACP,OACE,kBAACL,EAAD,KACE,kBAAC,EAAD,CAAQxB,OAAQ6B,IAChB,kBAAC,EAAD,CAAS7B,OAAQ6B,S,GA3CNQ,aCLJC,EAJH,WACV,OAAO,kBAAC,EAAD,OCQWC,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.476f6a1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center;\r\n  background: url(${process.env.PUBLIC_URL}/image/background.png) top center no-repeat;\r\n  background-size: 100%;\r\n  height: ${props => (props.resize > 897 ? 1004 : 300)}px;\r\n  color: #fff;\r\n  opacity: 0.9;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 1.8rem;\r\n\r\n  div:last-child {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Header = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <HeaderWrapper resize={resize}>\r\n      <HeaderContent>\r\n        <div>JHGUMA BLOG</div>\r\n        <div>Front-End Developer</div>\r\n      </HeaderContent>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst AboutContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: ${props=> props.resize === 300 && 'column'}\r\n`;\r\n\r\nconst ImageWrap = styled.div`\r\n  flex: 1 1 auto;\r\n`;\r\nconst Readme = styled.div`\r\n  width:  ${props=> props.resize === 300 ? '100' : '70'}%;\r\n  text-align: left;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  font-size: 13px;\r\n`;\r\n\r\nconst About = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <AboutContainer>\r\n      <p>\r\n        <span>A</span>bout\r\n      </p>\r\n      <Information resize={resize}>\r\n        <ImageWrap>\r\n          <img src={`${process.env.PUBLIC_URL}/image/profileImage.png`} alt=\" \" />\r\n          <div>\r\n            <b>정진호 (Jeong Jin ho)</b>\r\n          </div>\r\n          <Profile>bnbn2400@gamil.com</Profile>\r\n          <Profile>https://github.com/jhguma</Profile>\r\n        </ImageWrap>\r\n        <Readme resize={resize}>\r\n          Readme About Me...\r\n        </Readme>\r\n      </Information>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nAbout.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SkillContainer = styled.div`\r\n  padding: 1rem;\r\n\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst Skill = () => {\r\n  return (\r\n    <SkillContainer>\r\n      <p>Skill</p>\r\n    </SkillContainer>\r\n  );\r\n};\r\n\r\nexport default Skill;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CareerContainer = styled.div`\r\n  padding: 1rem;\r\n  background-color: #e2e2e2;\r\n  p:first-child {\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    span:first-child {\r\n      color: #4863a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CareerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CarrerContent = styled.div`\r\n  max-width: 40rem;\r\n  padding: 15px;\r\n  border: 1px solid #dcdcdc;\r\n  border-radius: 1rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  font-size: ${props => props.resize === 300 && '11px'};\r\n`;\r\n\r\nconst DateTime = styled.span`\r\n  float: 'right';\r\n  color: #74808a;\r\n`;\r\n\r\nconst Career = props => {\r\n  const {resize} = props;\r\n  return (\r\n    <CareerContainer>\r\n      <p>Career</p>\r\n      <CareerWrapper>\r\n        <CarrerContent resize={resize}>\r\n          <DateTime style={{float: 'right'}}>2019-01 ~ 2019-07</DateTime>\r\n          <h4>비트캠프 강남지점 수료</h4>\r\n          <dl>\r\n            <dt>JAVA FrontEnd BackEnd 개발자 양성과정</dt>\r\n            <dd>- Spring MVC Framework를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 이용한 Web Application 개발 교육 이수</dd>\r\n            <dd>- Servlet MVC를 통한 홈페이지 “여행이 좋다” 개발</dd>\r\n            <dd>- React와 Spring Boot를 이용한 홈페이지 “ABILITY” 개발</dd>\r\n          </dl>\r\n          <DateTime style={{float: 'right'}}>2019-10 ~ 2020-02</DateTime>\r\n          <h4>TES SYSTEM 개발팀</h4>\r\n          <dl>\r\n            <dt>시장 유동성 공급을 위한 프로젝트 개발</dt>\r\n            <dd>- python API 연동 React기반 LPMM Project 진행</dd>\r\n            <dd>- Redux, TypeScript를 이용한 LPMM v2 Project 진행</dd>\r\n            <dd>- React를 통한 Arena Page 개발</dd>\r\n          </dl>\r\n        </CarrerContent>\r\n      </CareerWrapper>\r\n    </CareerContainer>\r\n  );\r\n};\r\n\r\nCareer.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nCareer.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Career;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {About, Career, Skill} from 'Component';\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 75%;\r\n  text-align: center;\r\n  border: 1px solid #e2e2e2;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst Content = props => {\r\n  const {resize} = props;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <About resize={resize} />\r\n      <Career resize={resize} />\r\n      <Skill />\r\n      <div>content5 입니다</div>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  resize: PropTypes.number,\r\n};\r\n\r\nContent.defaultProps = {\r\n  resize: 1004,\r\n};\r\n\r\nexport default Content;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from 'Page/Layout/Header';\r\nimport Content from 'Page/Layout/Content';\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n    this.state = {\r\n      imageSize: 1004,\r\n    };\r\n  }\r\n\r\n  /* eslint-disable */\r\n  UNSAFE_componentWillMount() {\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n\r\n    this.setState({\r\n      imageSize: window.innerWidth <= 896 ? 300 : 1004,\r\n    });\r\n  }\r\n  /* eslint-disable */\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    const imageSize = {};\r\n    if (window.innerWidth <= 896) imageSize.isMobile = true;\r\n    else imageSize.isMobile = false;\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n    this.setState({\r\n      imageSize: imageSize.isMobile ? 300 : 1004,\r\n    });\r\n\r\n    // scope.width = window.innerWidth\r\n    // scope.height = window.innerHeight\r\n  }\r\n  render() {\r\n    const {imageSize} = this.state;\r\n    return (\r\n      <Body>\r\n        <Header resize={imageSize} />\r\n        <Content resize={imageSize} />\r\n      </Body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from 'Page';\n\nconst App = () => {\n  return <Home />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}